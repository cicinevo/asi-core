name: Deploy to Droplet

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: SSH into Droplet and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          fingerprint: ${{ secrets.DROPLET_HOST_FINGERPRINT }}
          port: 22
          script: |
            set -e
            # Ensure SSH config tells git which key to use for GitHub
            mkdir -p ~/.ssh && chmod 700 ~/.ssh
            cat > ~/.ssh/config << 'EOF'
            Host github.com
              HostName github.com
              User git
              IdentityFile ~/.ssh/github_ed25519
              IdentitiesOnly yes
              StrictHostKeyChecking accept-new
            EOF
            chmod 600 ~/.ssh/config

            # Deploy
            cd /home/ccleno/asi-core
            git remote -v || git remote add origin git@github.com:cicinevo/asi-core.git
            git fetch origin main
            git reset --hard origin/main
            docker compose up -d --build

            # Post-deploy health check (end-to-end via Caddy)
            echo "Waiting for health..."
            for i in {1..20}; do
              if curl -fsS https://evocoms.net/api/health >/dev/null; then
                echo "Health OK ✅"
                exit 0
              fi
              sleep 3
            done
            echo "Health check failed ❌"
            docker compose logs --since=10m asi-core-api || true
            docker compose logs --since=10m caddy || true
            exit 1
